# ---------------- 1 --------------------
'''Дан набор точек на координатной плоскости. Необходимо подсчитать и вывести
количество точек, лежащих в каждой координатной четверти.'''

# a = int(input())
# i = 0
# dictionary = {'Первая четверть:': 0, 'Вторая четверть:': 0, 'Третья четверть:': 0, 'Четвертая четверть:': 0}
# while i < a:
#     x, y = map(int, input().split())
#     if (x > 0) and (y > 0):
#         dictionary['Первая четверть:'] += 1
#     elif (x > 0) and (y < 0):
#         dictionary['Четвертая четверть:'] += 1
#     elif (x < 0) and (y < 0):
#         dictionary['Третья четверть:'] += 1
#     elif (x < 0) and (y > 0):
#         dictionary['Вторая четверть:'] += 1
#     i += 1
#
# for key in dictionary:
#         print(f"{key} {dictionary[key]}")


# ---------------- 2 --------------------
'''На вход программе подается строка текста из натуральных чисел. 
Из неё формируется список чисел. Напишите программу подсчета количества 
чисел, которые больше предшествующего им в этом списке числа, то есть, стоят вслед за меньшим числом.'''

# a = [int(a) for a in input().split()]
# res = 0
# for i in range(1,len(a)):
#     if a[i] > a[i - 1]:
#         res += 1
# print(res)


# ---------------- 3 --------------------
'''На вход программе подается строка текста из натуральных чисел. Из элементов строки формируется список чисел. 
Напишите программу, которая меняет местами соседние элементы списка (a[0] c a[1], a[2] c a[3] и т.д.). 
Если в списке нечетное количество элементов, то последний остается на своем месте.'''

# a = [int(a) for a in input().split()]
# if len(a) == 1:
#     print(a[0])
# else:
#     for i in range(0, len(a) - 1, 2):
#         a[i], a[i + 1] = a[i + 1], a[i]
#     print(*a)


# ---------------- 4 --------------------

'''На вход программе подается строка текста из натуральных чисел. Из элементов строки формируется список чисел. 
Напишите программу циклического сдвига элементов списка направо, когда последний элемент становится первым, 
а остальные сдвигаются на одну позицию вперед, в сторону увеличения индексов.'''

# a = [int(a) for a in input().split()]
# b = []
# b.insert(0, a[-1])
# for i in range(0, len(a) - 1):
#     b.insert(i + 1, a[i])
# print(*b)


# ---------------- 5 --------------------

'''На вход программе подается строка текста, содержащая натуральные числа, расположенные по неубыванию. 
Из строки формируется список чисел. Напишите программу для подсчета количества разных элементов в списке.'''

# a = [int(a) for a in input().split()]
# res = 0
# for i in range(1,len(a)):
#     if a[i] > a[i - 1]:
#         res += 1
# print(res)


# ---------------- 6 --------------------

'''Напишите программу для определения, является ли число произведением двух чисел из данного набора, выводящую 
результат в виде ответа «ДА» или «НЕТ».'''

# amount = int(input())
# l = []
# res = 1
# for i in range(amount):
#     l.append(int(input()))
#
# res_supposed = int(input())
# for i in l:
#     res *= i
# print(res)
# if res == res_supposed:
#     print("ДА")
# else:
#     print("НЕТ")

# ---------------- 7 --------------------

'''Тимур и Руслан пытаются разделить фронт работы по курсу "Python для профессионалов". Для этого они решили 
сыграть в камень, ножницы и бумагу. Помогите ребятам бросить честный жребий и определить, кто будет делать очередной 
модуль нового курса.'''

# Timur = input()
# Ruslan = input()
#
#
# class RPS(object):
#     def __init__(self, Timur, Ruslan):
#         """Constructor"""
#         self.Timur = Timur
#         self.Ruslan = Ruslan
#
#     def game(self):
#         if self.Timur == self.Ruslan:
#             return "ничья"
#         elif self.Timur == "камень" and self.Ruslan == "ножницы":
#             return "Тимур"
#         elif self.Timur == "бумага" and self.Ruslan == "камень":
#             return "Тимур"
#         elif self.Timur == "ножницы" and self.Ruslan == "бумага":
#             return "Тимур"
#         else:
#             return "Руслан"
#
#
# res = RPS(Timur, Ruslan)
# print(res.game())

# ---------------- 8 --------------------

'''Проиграв 1010 раз Тимуру, Руслан понял, что так дело дальше не пойдет, и решил усложнить игру. Теперь Тимур и 
Руслан играют в игру Камень, ножницы, бумага, ящерица, Спок. Помогите ребятам вновь бросить честный жребий и определить, 
кто будет делать следующий модуль в новом курсе.'''


# Timur = input()
# Ruslan = input()
# res = {'камень-камень': 'ничья', 'камень-ножницы': 'Тимур', 'камень-бумага': 'Руслан',
#         'камень-ящерица': 'Тимур', 'камень-Спок': 'Руслан', 'ножницы-ножницы': 'ничья',
#         'ножницы-бумага': 'Тимур', 'ножницы-камень': 'Руслан', 'ножницы-ящерица': 'Тимур',
#         'ножницы-Спок': 'Руслан', 'бумага-бумага': 'ничья', 'бумага-камень': 'Тимур',
#         'бумага-ножницы': 'Руслан', 'бумага-ящерица': 'Руслан', 'бумага-Спок': 'Руслан',
#         'ящерица-ящерица': 'ничья', 'ящерица-Спок': 'Тимур', 'ящерица-ножницы': 'Руслан',
#         'ящерица-бумага': 'Тимур', 'ящерица-камень': 'Руслан', 'Спок-Спок': 'ничья',
#         'Спок-ножницы': 'Тимур', 'Спок-бамага': 'Руслан', 'Спок-камень': 'Тимур',
#         'Спок-ящерица': 'Руслан'}
#
# print(res[Timur + "-" + Ruslan])

# ---------------- 9 --------------------

'''Дана строка текста, состоящая из букв русского алфавита "О" и "Р". Буква "О" – соответствует выпадению Орла, а буква 
"Р" – соответствует выпадению Решки. Напишите программу, которая подсчитывает наибольшее количество подряд выпавших Решек.'''

# a = [input().split("О")]
# length = 0
# for i in a:
#     for y in i:
#         if len(y) > length:
#             length = len(y)
# print(length)


# ---------------- 10 --------------------

'''Искусственный интеллект Антон, созданный Гилфойлом, взломал сеть умных холодильников. Теперь он использует их в качестве 
серверов "Пегого дудочника". Помогите владельцу фирмы отыскать все зараженные холодильники.
Для каждого холодильника существует строка с данными, состоящая из строчных букв и цифр, и если в ней присутствует слово 
"anton" (необязательно рядом стоящие буквы, главное наличие последовательности букв), то холодильник заражен и нужно вывести номер 
холодильника, нумерация начинается с единицы'''

# a = int(input())
# l = []
# res = []
# res2 = []
# cond = ["a","n","t","o","n"]
# res3 = []
# clean_list = []
# for i in range(a):
#     l.append(input())
#
# for i in l:
#     for y in i:
#         if y in cond:
#             res.append(y)
#     myString = ''.join(res)
#     res2.append(myString)
#     res = []
#
#
#
#
# for i in range(len(res2)):
#     if res2[i] == "anton":
#         res3.append(i + 1)
#
# print(*res3)
# print(res2)
# print(l)


# ---------------- 10 --------------------

'''Необходимо написать программу, реализующую алгоритм написания этой песни. Алгоритм выводит в конце предложения 
следующую в алфавитном порядке букву, если она встречается в строке текста, а очередную строку отображает уже без этой буквы.'''


word = input() + ' запретил букву'
b = ['а', 'б', 'в', 'г', 'д', 'е', 'ж', 'з', 'и', 'й', 'к', 'л', 'м', 'н', 'о', 'п', 'р', 'с', 'т', 'у', 'ф', 'х', 'ц', 'ч', 'ш', 'щ', 'ъ', 'ы', 'ь', 'э', 'ю', 'я']

for i in b:
    if i in word: